# Generated by Django 3.0.7 on 2020-07-13 19:38

from django.db import migrations, models
import django.db.models.deletion
import easy_thumbnails.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveSmallIntegerField(default=1)),
            ],
            options={
                'verbose_name': 'Cart Product',
                'verbose_name_plural': 'Cart Products',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=70, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=70, verbose_name='Last Name')),
                ('state', models.CharField(max_length=100, verbose_name='State')),
                ('city', models.CharField(max_length=70, verbose_name='City')),
                ('street', models.CharField(max_length=70, verbose_name='Street')),
                ('building', models.CharField(max_length=50, verbose_name='Building')),
                ('phone', models.CharField(max_length=12, verbose_name='Phone')),
                ('post_code', models.CharField(blank=True, max_length=20, verbose_name='Post Code')),
                ('customer_notes', models.CharField(blank=True, max_length=250, verbose_name='Customer Notes')),
                ('manager_notes', models.CharField(blank=True, max_length=250, verbose_name='Manager Notes')),
                ('order_created', models.DateTimeField(auto_now_add=True, verbose_name='Order created')),
                ('order_updated', models.DateTimeField(auto_now=True, verbose_name='Order updated')),
                ('order_status', models.PositiveSmallIntegerField(choices=[(1, 'Created'), (2, 'Awaiting payment'), (3, 'Paid'), (4, 'Order is ready for delivery'), (5, 'Order shipped'), (6, 'Order cancelled')], default=1, verbose_name='Order status')),
                ('total_order_price', models.DecimalField(decimal_places=2, max_digits=9)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('price', models.DecimalField(decimal_places=2, help_text='Price at which the product will be sold', max_digits=9, verbose_name='Selling price')),
                ('strikeout_price', models.DecimalField(blank=True, decimal_places=2, help_text='Crossed/old product price', max_digits=5, null=True, verbose_name='Strikeout price')),
                ('sort_order', models.PositiveSmallIntegerField(default=0, verbose_name='Ordering')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ('-sort_order',),
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True)),
                ('image', easy_thumbnails.fields.ThumbnailerImageField(blank=True, upload_to='shop_categories')),
                ('description', models.TextField(blank=True, verbose_name='Category description')),
                ('show_in_top', models.BooleanField(default=True, verbose_name='Show in top')),
                ('show_in_sidebar', models.BooleanField(default=True, verbose_name='Show in sidebar')),
            ],
            options={
                'verbose_name': 'Product category',
                'verbose_name_plural': 'Product categories',
            },
        ),
        migrations.CreateModel(
            name='ProductMeasure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=10, verbose_name='Measure name')),
                ('category', models.PositiveSmallIntegerField(choices=[(0, 'Measure category is not selected'), (1, 'Weight'), (2, 'Quantity'), (3, 'Length')], default=0, verbose_name='Measure Category')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', easy_thumbnails.fields.ThumbnailerImageField(upload_to='products')),
                ('order', models.PositiveSmallIntegerField(db_index=True, default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='products.Product')),
            ],
            options={
                'ordering': ('-order',),
            },
        ),
        migrations.CreateModel(
            name='ProductCharacteristic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveSmallIntegerField(default=1)),
                ('measure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_characteristics', to='products.ProductMeasure')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_characteristics', to='products.Product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.ProductCategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='characteristics',
            field=models.ManyToManyField(blank=True, through='products.ProductCharacteristic', to='products.ProductMeasure', verbose_name='Product Characteristics'),
        ),
        migrations.AddField(
            model_name='product',
            name='images',
            field=models.ManyToManyField(related_name='products', to='products.ProductImage'),
        ),
        migrations.CreateModel(
            name='OrderedProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('count', models.PositiveSmallIntegerField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordered_products', to='products.Order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='products',
            field=models.ManyToManyField(through='products.OrderedProduct', to='products.Product'),
        ),
    ]
